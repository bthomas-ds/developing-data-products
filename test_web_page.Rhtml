<html>

<head>
<title>Title</title>
</head>

<body>

<p>This is an R HTML document. When you click the <b>Knit HTML</b> button a web page will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:</p>

<!--begin.rcode
library(dplyr)
library(plotly)
rm(list=ls())
setwd("~/Github/developing-data-products")

temperatures_by_state <- read.csv("/home/bthomas/Github/developing-data-products/Data/temperature.txt", header = TRUE, stringsAsFactors = FALSE)
temperatures_by_state <- temperatures_by_state[order(-temperatures_by_state$Avg..F),]
# create a vector of 50 in descending order
a1 <- seq(1:50)
a1 <- a1[order(-a1)]
# bind the rank level score
temperature_rank <- cbind(temperatures_by_state, a1)
colnames(temperature_rank)[3] <- "Temp_Score"
temperature_rank$State <- trimws(temperature_rank$State,c("both"))
rm(temperatures_by_state)

# Add State codes
states_codes <- read.csv("./Data/states.txt", stringsAsFactors = FALSE, header = TRUE)
temperature_rank <- left_join(temperature_rank, states_codes,"State" )

# healthcare
# well being ranking for older americans
# http://www.bankrate.com/finance/retirement/best-places-retire-how-state-ranks.aspx
well_being <- read.csv("/home/bthomas/Github/developing-data-products/Data/well_being_rank.txt", header = TRUE, stringsAsFactors = FALSE)
colnames(well_being)[1] <- "Well_Being_Rank"
well_being <- well_being[with (well_being, order(-Well_Being_Rank)),]
a1 <- a1[order(a1)]
wb_rank_score <- cbind(well_being,a1)
colnames(wb_rank_score)[3] <- "wb_r_score"


# join tables together
tbl_join <- inner_join(temperature_rank, wb_rank_score, 'State')
tbl_join <- select(tbl_join, State, Temp_Score, wb_r_score)
tbl_join$total_score <- tbl_join$Temp_Score + tbl_join$wb_r_score

# prepare data for the map
colnames(tbl_join)[2] <- "Temperature_Ranking"
colnames(tbl_join)[3] <- "Well_Being_Ranking"


#df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
#colnames(df)[2] <- "State"
#df <- select(df, code, State)
#df$State <- trimws(df$State)

#tbl_join <- left_join(tbl_join, df, "State")
tbl_join <- left_join(tbl_join, states_codes, "State")


tbl_join$hover <- with(tbl_join, paste(State, '<br>', "Temperature", Temperature_Ranking, "Well Being", tbl_join$Well_Being_Ranking, "<br>",
                           "Total Points", tbl_join$total_score))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
  scope = 'usa',
  projection = list(type = 'albers usa'),
  showlakes = TRUE,
  lakecolor = toRGB('white')
)

plot_ly(tbl_join, z = tbl_join$total_score, text = hover, locations = State, type = 'choropleth',
        locationmode = 'USA-states', color = tbl_join$total_score, colors = 'Purples',
        marker = list(line = l), colorbar = list(title = "Total of Ranking Scores")) %>%
  layout(title = 'State Rankings', geo = g)

end.rcode-->

<p>You can also embed plots, for example:</p>

<!--begin.rcode fig.width=7, fig.height=6
plot(cars)
end.rcode-->

</body>
</html>
